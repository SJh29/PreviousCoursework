package CourseSchedulerSparshJhaSJJ5514;

import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Sparsh
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester; 
    public MainFrame() {
        initComponents();
        rebuildSemesterComboBoxes();
        rebuildComboBoxes();
    }
    public void rebuildSemesterComboBoxes()
    {
        
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        if (semesters.size() > 0)
        {
            currentSemesterLabel.setText(semesters.get(0));
            currentSemester = semesters.get(0);
        }
        else
        {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
    }
    
    public void rebuildComboBoxes()
    {
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        ArrayList<String> studentNames = new ArrayList<>();
        ArrayList<String> courses = CourseQueries.getAllCourseCodes(currentSemester);
        for(StudentEntry student:students)
        {
        studentNames.add(student.getLastName()+", "+student.getFirstName()+", "+student.getStudentID());
        } 
        //Admin Tab Combo Boxes
        displayCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        dropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
        dropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        
        //Student Tab Combo Boxes
        selectCourseSCComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));                     
        selectStudentSCComboBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
        displayScheduleStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));       
        dropCourseCourseStuComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        dropCourseStudentStuComboBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        semesterIndicatorLabel = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        semesterChangeButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        adminTab = new javax.swing.JTabbedPane();
        addSemesterPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemSubmitButton = new javax.swing.JButton();
        addSemStatusLabel = new javax.swing.JLabel();
        addSemesterStatusLabel = new javax.swing.JLabel();
        addCoursePanel = new javax.swing.JPanel();
        courseAddCode = new javax.swing.JLabel();
        courseCodeAddText = new javax.swing.JTextField();
        courseDescAdd = new javax.swing.JLabel();
        courseMaxStuLabel = new javax.swing.JLabel();
        courseAddSubmitButton = new javax.swing.JButton();
        addCourseSeatsSpinner = new javax.swing.JSpinner();
        addCourseDescriptionText = new javax.swing.JTextField();
        addCourseOutputLabel = new javax.swing.JLabel();
        addStudentPanel = new javax.swing.JPanel();
        firstNameStuAdmin = new javax.swing.JLabel();
        fNameStuAdminText = new javax.swing.JTextField();
        lastNameStuAdmin = new javax.swing.JLabel();
        lNameStuAdminText = new javax.swing.JTextField();
        stuAddSubmitButton = new javax.swing.JButton();
        stuIDAdminText = new javax.swing.JTextField();
        stuIDAdminLabel = new javax.swing.JLabel();
        addStudentOutputLabel = new javax.swing.JLabel();
        displayCourseListStudentsPanel = new javax.swing.JPanel();
        displayCourseListName = new javax.swing.JLabel();
        displayCourseComboBox = new javax.swing.JComboBox<>();
        displayCourseListButton = new javax.swing.JButton();
        scheduledStudentsLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        scheduledStudentsDisplay = new javax.swing.JTable();
        displayWaitlistedStudentsLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        waitlistedStudentsDisplay = new javax.swing.JTable();
        dropStudentPanel = new javax.swing.JPanel();
        dropStudentComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        dropStudentOutputText = new javax.swing.JTextArea();
        dropStudentButton = new javax.swing.JButton();
        dropCoursePanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        dropCourseComboBox = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        dropCourseOutputText = new javax.swing.JTextArea();
        dropCourseButton = new javax.swing.JButton();
        studentTab = new javax.swing.JTabbedPane();
        displayCoursesPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayCoursesTable = new javax.swing.JTable();
        displayCoursesButton = new javax.swing.JButton();
        scheduleCoursePanel = new javax.swing.JPanel();
        studentIDLabel = new javax.swing.JLabel();
        courseCodeLabel = new javax.swing.JLabel();
        submitScheduleCourseButton = new javax.swing.JButton();
        selectStudentSCComboBox = new javax.swing.JComboBox<>();
        selectCourseSCComboBox = new javax.swing.JComboBox<>();
        scheduleCourseOutputLabel = new javax.swing.JLabel();
        displaySchedulePanel = new javax.swing.JPanel();
        displaySelectStudent = new javax.swing.JLabel();
        displayScheduleButton = new javax.swing.JButton();
        displayScheduleStudentComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayScheduleTable = new javax.swing.JTable();
        dropCourseStuPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        dropCourseCourseStuComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        dropCourseStudentStuComboBox = new javax.swing.JComboBox<>();
        dropStudentFromCourseButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        dropCourseStudentText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setText("Course Scheduler");

        semesterIndicatorLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        semesterIndicatorLabel.setText("Current Semester :");

        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        semesterChangeButton.setText("Change Semester");
        semesterChangeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semesterChangeButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemSubmitButton.setText("Submit");
        addSemSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemSubmitButtonActionPerformed(evt);
            }
        });

        addSemStatusLabel.setText("                                                   ");
        addSemStatusLabel.setToolTipText("");

        javax.swing.GroupLayout addSemesterPanelLayout = new javax.swing.GroupLayout(addSemesterPanel);
        addSemesterPanel.setLayout(addSemesterPanelLayout);
        addSemesterPanelLayout.setHorizontalGroup(
            addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSemesterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addSemStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addSemesterPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addSemSubmitButton)
                            .addGroup(addSemesterPanelLayout.createSequentialGroup()
                                .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(493, Short.MAX_VALUE))
        );
        addSemesterPanelLayout.setVerticalGroup(
            addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSemesterPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(addSemSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addSemStatusLabel)
                .addContainerGap(412, Short.MAX_VALUE))
        );

        adminTab.addTab("Add Semester", addSemesterPanel);

        courseAddCode.setText("Course Code");

        courseCodeAddText.setColumns(10);

        courseDescAdd.setText("Course Description");

        courseMaxStuLabel.setText("Seats");

        courseAddSubmitButton.setText("Submit");
        courseAddSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseAddSubmitButtonActionPerformed(evt);
            }
        });

        addCourseSeatsSpinner.setModel(new javax.swing.SpinnerNumberModel());

        addCourseDescriptionText.setColumns(500);

        javax.swing.GroupLayout addCoursePanelLayout = new javax.swing.GroupLayout(addCoursePanel);
        addCoursePanel.setLayout(addCoursePanelLayout);
        addCoursePanelLayout.setHorizontalGroup(
            addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(courseAddSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addCoursePanelLayout.createSequentialGroup()
                        .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(courseAddCode)
                            .addComponent(courseDescAdd)
                            .addComponent(courseMaxStuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCourseSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(courseCodeAddText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addCourseDescriptionText, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(addCourseOutputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(344, Short.MAX_VALUE))
        );
        addCoursePanelLayout.setVerticalGroup(
            addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoursePanelLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseAddCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseCodeAddText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseDescAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCourseDescriptionText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseMaxStuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCourseSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(courseAddSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCourseOutputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(383, Short.MAX_VALUE))
        );

        adminTab.addTab("Add Course", addCoursePanel);

        firstNameStuAdmin.setText("First Name");

        fNameStuAdminText.setColumns(10);

        lastNameStuAdmin.setText("Last Name");

        lNameStuAdminText.setColumns(10);

        stuAddSubmitButton.setText("Submit");
        stuAddSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stuAddSubmitButtonActionPerformed(evt);
            }
        });

        stuIDAdminText.setColumns(10);

        stuIDAdminLabel.setText("Student ID");

        javax.swing.GroupLayout addStudentPanelLayout = new javax.swing.GroupLayout(addStudentPanel);
        addStudentPanel.setLayout(addStudentPanelLayout);
        addStudentPanelLayout.setHorizontalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addStudentPanelLayout.createSequentialGroup()
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameStuAdmin)
                            .addComponent(addStudentOutputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stuAddSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(addStudentPanelLayout.createSequentialGroup()
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(addStudentPanelLayout.createSequentialGroup()
                                    .addComponent(stuIDAdminLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(stuIDAdminText, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(addStudentPanelLayout.createSequentialGroup()
                                    .addComponent(firstNameStuAdmin)
                                    .addGap(18, 18, 18)
                                    .addComponent(fNameStuAdminText, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(addStudentPanelLayout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(lNameStuAdminText, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 775, Short.MAX_VALUE))))
        );
        addStudentPanelLayout.setVerticalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stuIDAdminLabel)
                    .addComponent(stuIDAdminText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameStuAdmin)
                    .addComponent(fNameStuAdminText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameStuAdmin)
                    .addComponent(lNameStuAdminText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(stuAddSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(addStudentOutputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(363, Short.MAX_VALUE))
        );

        adminTab.addTab("Add Student", addStudentPanel);

        displayCourseListName.setText("Select Course");

        displayCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        displayCourseListButton.setText("Display");
        displayCourseListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayCourseListButtonActionPerformed(evt);
            }
        });

        scheduledStudentsLabel.setText("Scheduled Students");

        scheduledStudentsDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "Student ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scheduledStudentsDisplay.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(scheduledStudentsDisplay);
        if (scheduledStudentsDisplay.getColumnModel().getColumnCount() > 0) {
            scheduledStudentsDisplay.getColumnModel().getColumn(0).setResizable(false);
            scheduledStudentsDisplay.getColumnModel().getColumn(1).setResizable(false);
            scheduledStudentsDisplay.getColumnModel().getColumn(2).setResizable(false);
        }

        displayWaitlistedStudentsLabel.setText("Waitlisted Students");

        waitlistedStudentsDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "Student ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        waitlistedStudentsDisplay.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(waitlistedStudentsDisplay);
        if (waitlistedStudentsDisplay.getColumnModel().getColumnCount() > 0) {
            waitlistedStudentsDisplay.getColumnModel().getColumn(0).setResizable(false);
            waitlistedStudentsDisplay.getColumnModel().getColumn(1).setResizable(false);
            waitlistedStudentsDisplay.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout displayCourseListStudentsPanelLayout = new javax.swing.GroupLayout(displayCourseListStudentsPanel);
        displayCourseListStudentsPanel.setLayout(displayCourseListStudentsPanelLayout);
        displayCourseListStudentsPanelLayout.setHorizontalGroup(
            displayCourseListStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayCourseListStudentsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayCourseListStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, displayCourseListStudentsPanelLayout.createSequentialGroup()
                        .addComponent(displayCourseListName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(displayCourseListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scheduledStudentsLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayWaitlistedStudentsLabel, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(518, Short.MAX_VALUE))
        );
        displayCourseListStudentsPanelLayout.setVerticalGroup(
            displayCourseListStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayCourseListStudentsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayCourseListStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayCourseListName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayCourseListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scheduledStudentsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(displayWaitlistedStudentsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(134, Short.MAX_VALUE))
        );

        adminTab.addTab("Display Course List of Students", displayCourseListStudentsPanel);

        dropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Select Student");

        dropStudentOutputText.setColumns(20);
        dropStudentOutputText.setRows(5);
        jScrollPane5.setViewportView(dropStudentOutputText);

        dropStudentButton.setText("Drop Student");
        dropStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropStudentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dropStudentPanelLayout = new javax.swing.GroupLayout(dropStudentPanel);
        dropStudentPanel.setLayout(dropStudentPanelLayout);
        dropStudentPanelLayout.setHorizontalGroup(
            dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dropStudentPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dropStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(465, Short.MAX_VALUE))
        );
        dropStudentPanelLayout.setVerticalGroup(
            dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        adminTab.addTab("Drop Student", dropStudentPanel);

        jLabel3.setText("Select Course");

        dropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dropCourseOutputText.setColumns(20);
        dropCourseOutputText.setRows(5);
        jScrollPane6.setViewportView(dropCourseOutputText);

        dropCourseButton.setText("Drop Course");
        dropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropCourseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dropCoursePanelLayout = new javax.swing.GroupLayout(dropCoursePanel);
        dropCoursePanel.setLayout(dropCoursePanelLayout);
        dropCoursePanelLayout.setHorizontalGroup(
            dropCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dropCoursePanelLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dropCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(465, Short.MAX_VALUE))
        );
        dropCoursePanelLayout.setVerticalGroup(
            dropCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(340, Short.MAX_VALUE))
        );

        adminTab.addTab("Drop Course", dropCoursePanel);

        jTabbedPane1.addTab("Admin", adminTab);

        displayCoursesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course Code", "Description", "Seats"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        displayCoursesTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(displayCoursesTable);

        displayCoursesButton.setText("Display");
        displayCoursesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayCoursesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displayCoursesPanelLayout = new javax.swing.GroupLayout(displayCoursesPanel);
        displayCoursesPanel.setLayout(displayCoursesPanelLayout);
        displayCoursesPanelLayout.setHorizontalGroup(
            displayCoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayCoursesPanelLayout.createSequentialGroup()
                .addGroup(displayCoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayCoursesPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(displayCoursesPanelLayout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(displayCoursesButton)))
                .addContainerGap(518, Short.MAX_VALUE))
        );
        displayCoursesPanelLayout.setVerticalGroup(
            displayCoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayCoursesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(displayCoursesButton)
                .addContainerGap(348, Short.MAX_VALUE))
        );

        studentTab.addTab("Display Courses", displayCoursesPanel);

        studentIDLabel.setText("Select Student");

        courseCodeLabel.setText("Select Course");

        submitScheduleCourseButton.setText("Submit");
        submitScheduleCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitScheduleCourseButtonActionPerformed(evt);
            }
        });

        selectStudentSCComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        selectCourseSCComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout scheduleCoursePanelLayout = new javax.swing.GroupLayout(scheduleCoursePanel);
        scheduleCoursePanel.setLayout(scheduleCoursePanelLayout);
        scheduleCoursePanelLayout.setHorizontalGroup(
            scheduleCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scheduleCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scheduleCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(submitScheduleCourseButton)
                    .addGroup(scheduleCoursePanelLayout.createSequentialGroup()
                        .addGroup(scheduleCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(courseCodeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(studentIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(scheduleCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectStudentSCComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectCourseSCComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(scheduleCourseOutputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(570, Short.MAX_VALUE))
        );
        scheduleCoursePanelLayout.setVerticalGroup(
            scheduleCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scheduleCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scheduleCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentIDLabel)
                    .addComponent(selectStudentSCComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(scheduleCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(courseCodeLabel)
                    .addComponent(selectCourseSCComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(submitScheduleCourseButton)
                .addGap(18, 18, 18)
                .addComponent(scheduleCourseOutputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(428, Short.MAX_VALUE))
        );

        studentTab.addTab("Schedule Course", scheduleCoursePanel);

        displaySelectStudent.setText("Select Student");

        displayScheduleButton.setText("Display");
        displayScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayScheduleButtonActionPerformed(evt);
            }
        });

        displayScheduleStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        displayScheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Code", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        displayScheduleTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(displayScheduleTable);

        javax.swing.GroupLayout displaySchedulePanelLayout = new javax.swing.GroupLayout(displaySchedulePanel);
        displaySchedulePanel.setLayout(displaySchedulePanelLayout);
        displaySchedulePanelLayout.setHorizontalGroup(
            displaySchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displaySchedulePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displaySchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displaySchedulePanelLayout.createSequentialGroup()
                        .addComponent(displaySelectStudent)
                        .addGap(18, 18, 18)
                        .addComponent(displayScheduleStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(displayScheduleButton)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(518, Short.MAX_VALUE))
        );
        displaySchedulePanelLayout.setVerticalGroup(
            displaySchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displaySchedulePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displaySchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displaySelectStudent)
                    .addComponent(displayScheduleStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(displayScheduleButton)
                .addContainerGap(288, Short.MAX_VALUE))
        );

        studentTab.addTab("Display Schedule", displaySchedulePanel);

        jLabel5.setText("Select Course");

        dropCourseCourseStuComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Select Student");

        dropCourseStudentStuComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dropStudentFromCourseButton.setText("Drop Course");
        dropStudentFromCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropStudentFromCourseButtonActionPerformed(evt);
            }
        });

        dropCourseStudentText.setColumns(20);
        dropCourseStudentText.setRows(5);
        jScrollPane7.setViewportView(dropCourseStudentText);

        javax.swing.GroupLayout dropCourseStuPanelLayout = new javax.swing.GroupLayout(dropCourseStuPanel);
        dropCourseStuPanel.setLayout(dropCourseStuPanelLayout);
        dropCourseStuPanelLayout.setHorizontalGroup(
            dropCourseStuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropCourseStuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropCourseStuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dropCourseStuPanelLayout.createSequentialGroup()
                        .addGroup(dropCourseStuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(dropCourseStuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dropCourseCourseStuComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dropCourseStudentStuComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(dropStudentFromCourseButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(dropCourseStuPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 576, Short.MAX_VALUE))
        );
        dropCourseStuPanelLayout.setVerticalGroup(
            dropCourseStuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropCourseStuPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(dropCourseStuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropCourseCourseStuComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dropCourseStuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropCourseStudentStuComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(dropStudentFromCourseButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(282, Short.MAX_VALUE))
        );

        studentTab.addTab("Drop Course", dropCourseStuPanel);

        jTabbedPane1.addTab("Student", studentTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(274, 274, 274)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(semesterIndicatorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(semesterChangeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(currentSemesterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(semesterIndicatorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(semesterChangeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void semesterChangeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semesterChangeButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        int currentindex = currentSemesterComboBox.getSelectedIndex();
        if (semesters.size() > 0)
        {
            currentSemesterLabel.setText(semesters.get(currentindex));
            currentSemester = semesters.get(currentindex);
        }
        else
        {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
        rebuildComboBoxes();
        
    }//GEN-LAST:event_semesterChangeButtonActionPerformed

    private void addSemSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemSubmitButtonActionPerformed
        // TODO add your handling code here:
        String semester = addSemesterTextfield.getText();
        SemesterQueries.addSemester(semester);
        addSemStatusLabel.setText("Semester " + semester + " has been added.");
        rebuildSemesterComboBoxes();
    }//GEN-LAST:event_addSemSubmitButtonActionPerformed

    private void courseAddSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseAddSubmitButtonActionPerformed
        // Add course to database using a new CourseEntry object
        String courseCodeAdd = courseCodeAddText.getText();
        String courseDescription = addCourseDescriptionText.getText();
        int courseSeats = Integer.parseInt(addCourseSeatsSpinner.getValue().toString());
        CourseQueries.addCourse(new CourseEntry(currentSemester, courseCodeAdd, courseDescription, courseSeats));
        addCourseOutputLabel.setText(courseCodeAdd+" has been added.");
        rebuildComboBoxes();
    }//GEN-LAST:event_courseAddSubmitButtonActionPerformed

    private void stuAddSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stuAddSubmitButtonActionPerformed
        // add student to database using a new StudentEntry object
        String sid = stuIDAdminText.getText();
        String fname = fNameStuAdminText.getText();
        String lname = lNameStuAdminText.getText();
        StudentQueries.addStudent(new StudentEntry(sid, fname, lname));
        addStudentOutputLabel.setText(lname+", "+fname+" has been added");
        rebuildComboBoxes();

    }//GEN-LAST:event_stuAddSubmitButtonActionPerformed

    private void displayScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayScheduleButtonActionPerformed
        // TODO add your handling code here:
        ArrayList <StudentEntry> students = StudentQueries.getAllStudents();
        String studentID = students.get(displayScheduleStudentComboBox.getSelectedIndex()).getStudentID();
        ArrayList <ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(currentSemester, studentID);

        DefaultTableModel displayScheduleTableModel = (DefaultTableModel)displayScheduleTable.getModel();

        displayScheduleTableModel.setNumRows(0);
        Object[] rowData = new Object[2];
        for (ScheduleEntry entry:schedule)
        {
            rowData[0] = entry.getCourseCode();
            rowData[1] = entry.getStatus();
            displayScheduleTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_displayScheduleButtonActionPerformed

    private void submitScheduleCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitScheduleCourseButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<String> coursecodes = CourseQueries.getAllCourseCodes(currentSemester);
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();

        java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
        int currentStuIndex = selectStudentSCComboBox.getSelectedIndex();
        int currentCourseIndex = selectCourseSCComboBox.getSelectedIndex();
        String currentCourse = coursecodes.get(currentCourseIndex);

        int scheduledStudents = ScheduleQueries.getScheduledStudentCount(currentSemester, currentCourse);
        if (scheduledStudents < CourseQueries.getCourseSeats(currentSemester, currentCourse))
        {
            ScheduleQueries.addScheduleEntry(new ScheduleEntry(currentSemester, currentCourse, students.get(currentStuIndex).getStudentID(),"S", currentTimestamp));
            scheduleCourseOutputLabel.setText(students.get(currentStuIndex).getLastName()+", "+students.get(currentStuIndex).getFirstName()+" has been scheduled for the class");
        }
        else
        {
            ScheduleQueries.addScheduleEntry(new ScheduleEntry(currentSemester, currentCourse, students.get(currentStuIndex).getStudentID(),"W", currentTimestamp));
            scheduleCourseOutputLabel.setText(students.get(currentStuIndex).getLastName()+", "+students.get(currentStuIndex).getFirstName()+" has been waitlisted for the class");
        }

    }//GEN-LAST:event_submitScheduleCourseButtonActionPerformed

    private void displayCoursesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayCoursesButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        DefaultTableModel displayCoursesTableModel = (DefaultTableModel)displayCoursesTable.getModel();
        displayCoursesTableModel.setNumRows(0);
        Object[] rowData = new Object[3];
        for (CourseEntry course:courses)
        {
            rowData[0] = course.getCourseCode();
            rowData[1] = course.getDescription();
            rowData[2] = course.getSeats();
            displayCoursesTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_displayCoursesButtonActionPerformed

    private void displayCourseListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayCourseListButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);        
        int courseIndex = displayCourseComboBox.getSelectedIndex();
        String selectedCourse = courses.get(courseIndex).getCourseCode();
        ArrayList<ScheduleEntry> schedules = ScheduleQueries.getScheduledStudentsByCourse(currentSemester, selectedCourse);
        ArrayList<ScheduleEntry> waitlists = ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester, selectedCourse);
        DefaultTableModel scheduledStudentsDisplayModel = (DefaultTableModel)scheduledStudentsDisplay.getModel();
        DefaultTableModel waitlistedStudentsDisplayModel = (DefaultTableModel)waitlistedStudentsDisplay.getModel();

        scheduledStudentsDisplayModel.setNumRows(0);
        waitlistedStudentsDisplayModel.setNumRows(0);
        Object[] rowData1 = new Object[3];
        Object[] rowData2 = new Object[3];
        for(ScheduleEntry schedule:schedules)
        {
            StudentEntry studentScheduled = StudentQueries.getStudent(schedule.getStudentID());
            rowData1[2] = schedule.getStudentID();
            rowData1[0] = studentScheduled.getLastName();
            rowData1[1] = studentScheduled.getFirstName();
            scheduledStudentsDisplayModel.addRow(rowData1);
        }
        for (ScheduleEntry waitlist: waitlists)
        {
            StudentEntry studentWaitlist = StudentQueries.getStudent(waitlist.getStudentID());
            rowData2[2] = waitlist.getStudentID();
            rowData2[0] = studentWaitlist.getLastName();
            rowData2[1] = studentWaitlist.getFirstName();
            waitlistedStudentsDisplayModel.addRow(rowData2);
        }
        
        
    }//GEN-LAST:event_displayCourseListButtonActionPerformed

    
    private void dropStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropStudentButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        StudentEntry currentStudent = students.get(dropStudentComboBox.getSelectedIndex());
        ArrayList<String> semList = SemesterQueries.getSemesterList();
        
        for(String semester:semList)
        {
            ArrayList<ScheduleEntry> schedules = ScheduleQueries.getScheduleByStudent(semester, currentStudent.getStudentID());
            dropStudentOutputText.append("For semester: "+semester+"\n\n");
            for(ScheduleEntry schedule:schedules)    
            {    
                ArrayList<ScheduleEntry> getWaitlist = ScheduleQueries.getWaitlistedStudentsByCourse(semester, schedule.getCourseCode());
                
                
                ScheduleQueries.dropStudentScheduleByCourse(semester, currentStudent.getStudentID(), schedule.getCourseCode());
                dropStudentOutputText.append(currentStudent.getLastName()+", "+currentStudent.getFirstName()+", "+currentStudent.getStudentID()+" has been dropped from "+schedule.getCourseCode()+"\n");
                
                
                if(!getWaitlist.isEmpty())
                {
                    ScheduleEntry nextWaitlistedStudent = getWaitlist.get(0);
                    StudentEntry waitlistedStudent = StudentQueries.getStudent(nextWaitlistedStudent.getStudentID());
                    ScheduleQueries.updateScheduleEntry(semester, nextWaitlistedStudent);
                    dropStudentOutputText.append(waitlistedStudent.getLastName()+", "+waitlistedStudent.getFirstName()+", "+waitlistedStudent.getStudentID()+ " has been scheduled for "+schedule.getCourseCode()+"\n");
                }
            }
        }
        StudentQueries.dropStudent(currentStudent.getStudentID());
        rebuildComboBoxes();
        dropStudentOutputText.append(currentStudent.getLastName()+", "+currentStudent.getFirstName()+", "+currentStudent.getStudentID()+" has been dropped from the list of students. \n\n\n");
    }//GEN-LAST:event_dropStudentButtonActionPerformed

    private void dropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropCourseButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        String coursecode = courses.get(dropCourseComboBox.getSelectedIndex()).getCourseCode();
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        ArrayList<ScheduleEntry> waitlistedStudents = ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester, coursecode);
        ArrayList<ScheduleEntry> scheduledStudents = ScheduleQueries.getScheduledStudentsByCourse(currentSemester, coursecode);
        
        //For Scheduled Students
        dropCourseOutputText.append("\nScheduled Students dropped from course: \n\n");
        for(ScheduleEntry schedule: scheduledStudents)
        {
            StudentEntry currentStudent = StudentQueries.getStudent(schedule.getStudentID());
            ScheduleQueries.dropStudentScheduleByCourse(currentSemester, currentStudent.getStudentID(), coursecode);
            dropCourseOutputText.append(currentStudent.getLastName()+", "+ currentStudent.getFirstName()+", " +currentStudent.getStudentID()+"\n");
        }
        
        //For Waitlisted Students
        dropCourseOutputText.append("\nWaitListed Students dropped from course: \n\n");
        for(ScheduleEntry waitlist: waitlistedStudents)
        {
            StudentEntry currentStudent = StudentQueries.getStudent(waitlist.getStudentID());
            ScheduleQueries.dropStudentScheduleByCourse(currentSemester, currentStudent.getStudentID(), coursecode);
            dropCourseOutputText.append(currentStudent.getLastName()+", "+ currentStudent.getFirstName()+", " +currentStudent.getStudentID()+"\n");
        }
        rebuildComboBoxes();
        
    }//GEN-LAST:event_dropCourseButtonActionPerformed

    private void dropStudentFromCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropStudentFromCourseButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        StudentEntry Student = students.get(dropCourseStudentStuComboBox.getSelectedIndex());        
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        CourseEntry course = courses.get(dropCourseCourseStuComboBox.getSelectedIndex());
        ArrayList<ScheduleEntry> waitlist = ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester, course.getCourseCode());
        
        ScheduleQueries.dropStudentScheduleByCourse(currentSemester, Student.getStudentID(), course.getCourseCode()); 
        dropCourseStudentText.append(Student.getLastName()+", "+Student.getFirstName()+", "+Student.getStudentID()+" has been dropped from "+ course.getCourseCode()+"\n");
        if(!waitlist.isEmpty())
        {
            ScheduleEntry nextWaitlistedStudent = waitlist.get(0);
            StudentEntry waitlistedStudent = StudentQueries.getStudent(nextWaitlistedStudent.getStudentID());
            ScheduleQueries.updateScheduleEntry(currentSemester, nextWaitlistedStudent);
            dropCourseStudentText.append(waitlistedStudent.getLastName()+", "+waitlistedStudent.getFirstName()+", "+waitlistedStudent.getStudentID()+ " has been scheduled for "+course.getCourseCode()+"\n");
        }
                
    }//GEN-LAST:event_dropStudentFromCourseButtonActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addCourseDescriptionText;
    private javax.swing.JLabel addCourseOutputLabel;
    private javax.swing.JPanel addCoursePanel;
    private javax.swing.JSpinner addCourseSeatsSpinner;
    private javax.swing.JLabel addSemStatusLabel;
    private javax.swing.JButton addSemSubmitButton;
    private javax.swing.JPanel addSemesterPanel;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JLabel addStudentOutputLabel;
    private javax.swing.JPanel addStudentPanel;
    private javax.swing.JTabbedPane adminTab;
    private javax.swing.JLabel courseAddCode;
    private javax.swing.JButton courseAddSubmitButton;
    private javax.swing.JTextField courseCodeAddText;
    private javax.swing.JLabel courseCodeLabel;
    private javax.swing.JLabel courseDescAdd;
    private javax.swing.JLabel courseMaxStuLabel;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JComboBox<String> displayCourseComboBox;
    private javax.swing.JButton displayCourseListButton;
    private javax.swing.JLabel displayCourseListName;
    private javax.swing.JPanel displayCourseListStudentsPanel;
    private javax.swing.JButton displayCoursesButton;
    private javax.swing.JPanel displayCoursesPanel;
    private javax.swing.JTable displayCoursesTable;
    private javax.swing.JButton displayScheduleButton;
    private javax.swing.JPanel displaySchedulePanel;
    private javax.swing.JComboBox<String> displayScheduleStudentComboBox;
    private javax.swing.JTable displayScheduleTable;
    private javax.swing.JLabel displaySelectStudent;
    private javax.swing.JLabel displayWaitlistedStudentsLabel;
    private javax.swing.JButton dropCourseButton;
    private javax.swing.JComboBox<String> dropCourseComboBox;
    private javax.swing.JComboBox<String> dropCourseCourseStuComboBox;
    private javax.swing.JTextArea dropCourseOutputText;
    private javax.swing.JPanel dropCoursePanel;
    private javax.swing.JPanel dropCourseStuPanel;
    private javax.swing.JComboBox<String> dropCourseStudentStuComboBox;
    private javax.swing.JTextArea dropCourseStudentText;
    private javax.swing.JButton dropStudentButton;
    private javax.swing.JComboBox<String> dropStudentComboBox;
    private javax.swing.JButton dropStudentFromCourseButton;
    private javax.swing.JTextArea dropStudentOutputText;
    private javax.swing.JPanel dropStudentPanel;
    private javax.swing.JTextField fNameStuAdminText;
    private javax.swing.JLabel firstNameStuAdmin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField lNameStuAdminText;
    private javax.swing.JLabel lastNameStuAdmin;
    private javax.swing.JLabel scheduleCourseOutputLabel;
    private javax.swing.JPanel scheduleCoursePanel;
    private javax.swing.JTable scheduledStudentsDisplay;
    private javax.swing.JLabel scheduledStudentsLabel;
    private javax.swing.JComboBox<String> selectCourseSCComboBox;
    private javax.swing.JComboBox<String> selectStudentSCComboBox;
    private javax.swing.JButton semesterChangeButton;
    private javax.swing.JLabel semesterIndicatorLabel;
    private javax.swing.JButton stuAddSubmitButton;
    private javax.swing.JLabel stuIDAdminLabel;
    private javax.swing.JTextField stuIDAdminText;
    private javax.swing.JLabel studentIDLabel;
    private javax.swing.JTabbedPane studentTab;
    private javax.swing.JButton submitScheduleCourseButton;
    private javax.swing.JTable waitlistedStudentsDisplay;
    // End of variables declaration//GEN-END:variables

}
